generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Hoáº·c MySQL, SQLite, etc.
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id
  username     String    @unique
  fullname     String?
  email        String    @unique
  hashPassword String?
  avatarUrl    String?
  bio          String?
  isAdmin      Boolean
  isVerify     Boolean
  videos       Video[]
  comments     Comment[]
  likes        Like[]
  followers    Follow[]  @relation("UserFollowers")
  following    Follow[]  @relation("UserFollowing")
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@map("user")
}

model Video {
  id          String    @id
  title       String
  description String?
  url         String
  thumbnail   String?
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  comments    Comment[]
  likes       Like[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("video")
}

model Comment {
  id        String   @id
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  videoId   String
  video     Video    @relation(fields: [videoId], references: [id])

  @@map("comment")
}

model Like {
  id        String   @id
  createdAt DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  videoId String
  video   Video  @relation(fields: [videoId], references: [id])

  @@map("like")
}

model Follow {
  id        String   @id
  createdAt DateTime @default(now())

  followerId String
  follower   User   @relation("UserFollowers", fields: [followerId], references: [id])

  followingId String
  following   User   @relation("UserFollowing", fields: [followingId], references: [id])

  @@map("follow")
}
